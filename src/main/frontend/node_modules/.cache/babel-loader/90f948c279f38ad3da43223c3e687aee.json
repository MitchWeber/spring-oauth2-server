{"ast":null,"code":"var _jsxFileName = \"/Users/michael/Developer/other/oAuth2/oauth2-spring-tutorial/src/main/frontend/src/components/signup/SignUpForm.tsx\";\nimport React, { useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport { Avatar } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\nexport const SignUpForm = () => {\n  const classes = useStyles();\n  const initialErrorsState = {\n    firstName: undefined,\n    lastName: undefined,\n    email: undefined,\n    password: undefined,\n    termsOfUse: undefined\n  };\n  const defaultErrorMessage = \"Upps... Sorry something went wrong! We are working on a Fix!\";\n  const usernamePasswordErrorMessage = \"Username or Password wrong!\";\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [termsOfUse, setTermsOfUse] = useState(\"\");\n  const [errors, setErrors] = useState(initialErrorsState);\n  const [unknownError, setUnknownError] = useState(false);\n  const [unknownErrorMessage, setUnknownErrorMessage] = useState(defaultErrorMessage);\n\n  const submit = async () => {\n    await axios.post(`http://localhost:8080/signup`, {\n      firstName,\n      lastName,\n      email,\n      password,\n      termsOfUse\n    }).then(resp => console.log(resp)).catch(error => {\n      if (error.response && error.response.data) {\n        let errorObject = {};\n        error.response.data.errors.forEach(e => {\n          errorObject[`${e.field}`] = e.defaultMessage;\n        });\n        setErrors(errorObject);\n      } else {\n        if (error.response && error.response.status === 401) {\n          setUnknownErrorMessage(usernamePasswordErrorMessage);\n        }\n\n        setUnknownError(true);\n      }\n    });\n    ;\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"section\",\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Sign up\"), /*#__PURE__*/React.createElement(\"form\", {\n    noValidate: true,\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    autoComplete: \"fname\",\n    name: \"firstName\",\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"firstName\",\n    label: \"First Name\",\n    value: firstName,\n    onChange: event => setFirstName(event.target.value),\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"lastName\",\n    label: \"Last Name\",\n    name: \"lastName\",\n    value: lastName,\n    onChange: event => setLastName(event.target.value),\n    autoComplete: \"lname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    autoComplete: \"email\",\n    value: email,\n    onChange: event => setEmail(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    value: password,\n    onChange: event => setPassword(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      value: \"termsOfUse\",\n      checked: Boolean(termsOfUse),\n      onChange: event => setTermsOfUse(event.target.checked + \"\"),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 38\n      }\n    }),\n    label: \"I accept the terms of use.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    fullWidth: true,\n    onClick: submit,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, \"Sign Up\")));\n};","map":{"version":3,"sources":["/Users/michael/Developer/other/oAuth2/oauth2-spring-tutorial/src/main/frontend/src/components/signup/SignUpForm.tsx"],"names":["React","useState","Container","Avatar","Typography","Grid","TextField","FormControlLabel","Checkbox","Button","LockOutlinedIcon","makeStyles","axios","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignUpForm","classes","initialErrorsState","firstName","undefined","lastName","email","password","termsOfUse","defaultErrorMessage","usernamePasswordErrorMessage","setFirstName","setLastName","setEmail","setPassword","setTermsOfUse","errors","setErrors","unknownError","setUnknownError","unknownErrorMessage","setUnknownErrorMessage","post","then","resp","console","log","catch","error","response","data","errorObject","forEach","e","field","defaultMessage","status","event","target","value","Boolean","checked"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport {Avatar} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport const SignUpForm = () => {\n\n    const classes = useStyles();\n\n    const initialErrorsState = {firstName: undefined, lastName: undefined, email: undefined, password: undefined, termsOfUse: undefined};\n    const defaultErrorMessage = \"Upps... Sorry something went wrong! We are working on a Fix!\";\n    const usernamePasswordErrorMessage = \"Username or Password wrong!\";\n\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [termsOfUse, setTermsOfUse] = useState(\"\");\n\n    const [errors, setErrors] = useState(initialErrorsState);\n    const [unknownError, setUnknownError] = useState(false);\n    const [unknownErrorMessage, setUnknownErrorMessage] = useState(defaultErrorMessage);\n\n    const submit = async () => {\n        await axios.post(`http://localhost:8080/signup`, {\n            firstName,\n            lastName,\n            email,\n            password,\n            termsOfUse\n        })\n            .then(resp => console.log(resp))\n            .catch(error => {\n                if (error.response && error.response.data) {\n                    let errorObject: any = {};\n                    error.response.data.errors.forEach((e: any) => {\n                        errorObject[`${e.field}`] = e.defaultMessage;\n                    })\n                    setErrors(errorObject);\n                } else {\n                    if (error.response && error.response.status === 401) {\n                        setUnknownErrorMessage(usernamePasswordErrorMessage);\n                    }\n                    setUnknownError(true);\n                }\n            });;\n    }\n\n    return (\n        <Container component=\"section\" className={classes.paper}>\n            <Avatar className={classes.avatar}>\n                <LockOutlinedIcon/>\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n                Sign up\n            </Typography>\n            <form noValidate className={classes.form}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            autoComplete=\"fname\"\n                            name=\"firstName\"\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            id=\"firstName\"\n                            label=\"First Name\"\n                            value={firstName}\n                            onChange={(event => setFirstName(event.target.value))}\n                            autoFocus\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            id=\"lastName\"\n                            label=\"Last Name\"\n                            name=\"lastName\"\n                            value={lastName}\n                            onChange={(event => setLastName(event.target.value))}\n                            autoComplete=\"lname\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            value={email}\n                            onChange={(event => setEmail(event.target.value))}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            value={password}\n                            onChange={(event => setPassword(event.target.value))}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormControlLabel\n                            control={<Checkbox\n                                value=\"termsOfUse\"\n                                checked={Boolean(termsOfUse)}\n                                onChange={(event => setTermsOfUse(event.target.checked+\"\"))}\n\n                                color=\"primary\"/>}\n                            label=\"I accept the terms of use.\"\n                        />\n                    </Grid>\n                </Grid>\n                <Button\n                    type=\"button\"\n                    fullWidth\n                    onClick={submit}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                >\n                    Sign Up\n                </Button>\n            </form>\n        </Container>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}