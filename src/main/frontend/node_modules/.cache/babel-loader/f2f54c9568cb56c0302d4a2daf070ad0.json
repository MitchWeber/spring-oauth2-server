{"ast":null,"code":"var _jsxFileName = \"/Users/michael/Developer/other/oAuth2/oauth2-spring-tutorial/src/main/frontend/src/components/signin/SignInForm.tsx\";\nimport { Avatar } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport { ErrorParser } from \"../ErrorParser\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\nexport const SignInForm = () => {\n  const initialErrorsState = {\n    username: undefined,\n    password: undefined\n  };\n  const defaultErrorMessage = \"Upps... Sorry something went wrong! We are working on a Fix!\";\n  const usernamePasswordErrorMessage = \"Username or Password wrong!\";\n  const classes = useStyles();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState(initialErrorsState);\n  const [unknownError, setUnknownError] = useState(false);\n  const [unknownErrorMessage, setUnknownErrorMessage] = useState(defaultErrorMessage);\n\n  const submit = async () => {\n    setErrors(initialErrorsState);\n    setUnknownErrorMessage(defaultErrorMessage); // TODO: Continue!!!!\n\n    await axios.post(`${process.env.REACT_APP_SELF_URL}/login`, {\n      username: email,\n      password\n    }).then(resp => console.log(resp)).catch(error => {\n      if (error.response && error.response.data) {\n        setErrors(ErrorParser.parse(error.response.data.errors));\n      } else {\n        if (error.response && error.response.status === 401) {\n          setUnknownErrorMessage(usernamePasswordErrorMessage);\n        }\n\n        setUnknownError(true);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    error: !!errors.username,\n    helperText: errors.username,\n    required: true,\n    fullWidth: true,\n    label: \"Email Address\",\n    name: \"email\",\n    autoComplete: \"email\",\n    autoFocus: true,\n    value: email,\n    onChange: event => setEmail(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    error: !!errors.password,\n    helperText: errors.password,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    autoComplete: \"current-password\",\n    value: password,\n    onChange: event => setPassword(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: submit,\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    href: \"#\",\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, \"Forgot password?\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    href: \"#\",\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, \"Don't have an account? Sign Up\")))), /*#__PURE__*/React.createElement(Snackbar, {\n    open: unknownError,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 6000,\n    onClose: () => setUnknownError(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: () => setUnknownError(false),\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, unknownErrorMessage)));\n};","map":{"version":3,"sources":["/Users/michael/Developer/other/oAuth2/oauth2-spring-tutorial/src/main/frontend/src/components/signin/SignInForm.tsx"],"names":["Avatar","Typography","TextField","Snackbar","Alert","LockOutlinedIcon","React","useState","Button","Grid","Link","makeStyles","axios","ErrorParser","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignInForm","initialErrorsState","username","undefined","password","defaultErrorMessage","usernamePasswordErrorMessage","classes","email","setEmail","setPassword","errors","setErrors","unknownError","setUnknownError","unknownErrorMessage","setUnknownErrorMessage","post","process","env","REACT_APP_SELF_URL","then","resp","console","log","catch","error","response","data","parse","status","event","target","value","vertical","horizontal"],"mappings":"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","sourcesContent":["import {Avatar} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\"\nimport React, {useState} from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport {ErrorParser} from \"../ErrorParser\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport const SignInForm = () => {\n    const initialErrorsState = {username: undefined, password: undefined};\n    const defaultErrorMessage = \"Upps... Sorry something went wrong! We are working on a Fix!\";\n    const usernamePasswordErrorMessage = \"Username or Password wrong!\";\n\n    const classes = useStyles();\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errors, setErrors] = useState(initialErrorsState);\n    const [unknownError, setUnknownError] = useState(false);\n    const [unknownErrorMessage, setUnknownErrorMessage] = useState(defaultErrorMessage);\n\n    const submit = async () => {\n\n        setErrors(initialErrorsState);\n        setUnknownErrorMessage(defaultErrorMessage);\n\n        // TODO: Continue!!!!\n        await axios.post(`${process.env.REACT_APP_SELF_URL}/login`, {username: email, password})\n            .then(resp => console.log(resp))\n            .catch(error => {\n                if (error.response && error.response.data) {\n                    setErrors(ErrorParser.parse(error.response.data.errors));\n                } else {\n                    if (error.response && error.response.status === 401) {\n                        setUnknownErrorMessage(usernamePasswordErrorMessage);\n                    }\n                    setUnknownError(true);\n                }\n            });\n    };\n\n\n    return (\n        <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n                <LockOutlinedIcon/>\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n                Sign in\n            </Typography>\n            <form className={classes.form} noValidate>\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    error={!!errors.username}\n                    helperText={errors.username}\n                    required\n                    fullWidth\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    autoFocus\n                    value={email}\n                    onChange={event => setEmail(event.target.value)}\n                />\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    error={!!errors.password}\n                    helperText={errors.password}\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    value={password}\n                    onChange={event => setPassword(event.target.value)}\n                />\n                <Button\n                    type=\"button\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={submit}\n                    className={classes.submit}\n                >\n                    Sign In\n                </Button>\n                <Grid container>\n                    <Grid item xs>\n                        <Link href=\"#\" variant=\"body2\">\n                            Forgot password?\n                        </Link>\n                    </Grid>\n                    <Grid item>\n                        <Link href=\"#\" variant=\"body2\">\n                            {\"Don't have an account? Sign Up\"}\n                        </Link>\n                    </Grid>\n                </Grid>\n            </form>\n\n            <Snackbar\n                open={unknownError}\n                anchorOrigin={({vertical: 'top', horizontal: 'center'})}\n                autoHideDuration={6000}\n                onClose={() => setUnknownError(false)}>\n                <Alert onClose={() => setUnknownError(false)} severity=\"error\">\n                    {unknownErrorMessage}\n                </Alert>\n            </Snackbar>\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}